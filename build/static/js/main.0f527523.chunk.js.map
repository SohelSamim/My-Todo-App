{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","title","App","useState","input","setInput","todos","setTodos","className","value","onChange","e","target","type","disabled","onClick","preventDefault","map","todo","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAceA,G,MAXF,SAACC,GACV,OACI,8BACI,mCAAMA,EAAMC,aCoCTC,MArCf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAWb,OACE,sBAAKC,UAAU,MAAf,UAEA,6DAEA,iCACE,uBACFC,MAAQL,EACRM,SAAW,SAACC,GAAD,OAAON,EAASM,EAAEC,OAAOH,QACpCI,KAAK,SAEL,wBAAQC,UAAYV,EAAOS,KAAM,SAASE,QAnB5B,SAACJ,GACfA,EAAEK,iBACFT,EAAS,GAAD,mBAAMD,GAAN,CAAaF,KACrBC,EAAS,KAgBT,yBAKCC,EAAMW,KAAI,SAACC,EAAMC,GAAP,OACX,cAAC,EAAD,CAAMlB,MAAOiB,GAAWC,UCrBbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f527523.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Todo = (props) => {\n    return (\n        <div>\n            <h1> {props.title}</h1>\n        </div>\n\n\n    );\n};\n\n\nexport default Todo;\n\n","/*import { title } from 'process';*/\nimport React, { useState } from 'react';\nimport './App.css';\nimport Todo from './Todo';\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const addTodo = (e) => {\n    e.preventDefault();\n    setTodos( [...todos, input]);\n    setInput(\"\");\n  };\n\n\n\n  return (\n    <div className=\"App\">\n   \n    <h1> THIS IS A SIMPLE TODO APP </h1>\n\n    <form> \n      <input \n    value= {input} \n    onChange= {(e) => setInput(e.target.value)} \n    type=\"text\" \n    />\n    <button disabled= {!input} type =\"submit\" onClick={addTodo}>\n      Add todo\n    </button>\n    </form>\n\n    {todos.map((todo, i) =>(\n    <Todo title={todo} key={i} />\n    ))}\n    \n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}